// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.0.x", "native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Tablas BD
model EJEESTRATEGICO {
  eje_id      Int @id @default(autoincrement())
  numero_eje  Int @unique
  nombre_eje  String
  objetivos    OBJETIVOESTRATEGICO[]

  @@map("ejeestrategico")
}

model OBJETIVOESTRATEGICO {
  obj_id          Int @id @default(autoincrement())
  eje_id          Int
  cod_obj         String @unique
  nombre_obj      String
  indica_objetivo INDICADOROBJETIVO[]
  planes          PLANDEACCION[]
  eje             EJEESTRATEGICO @relation(fields: [eje_id], references: [eje_id], onDelete: Cascade)

  @@map("objetivoestrategico")
}

model INDICADOROBJETIVO {
  ind_obj_id      Int @id @default(autoincrement())
  obj_id          Int
  desc_indicaobj  String
  plan_impa_ind   PLANIMPACTAINDICADOR[]
  objetivo        OBJETIVOESTRATEGICO @relation(fields: [obj_id], references: [obj_id], onDelete: Cascade)

  @@map("indicadorobjetivo")
}

model PLANDEACCION {
  plan_id         Int @id @default(autoincrement())
  obj_id          Int
  user_id         Int
  nombre_plan     String
  fecha_creacion  DateTime @default(now())
  updatedAt       DateTime @updatedAt //Agregar con tabla vac√≠a
  observaciones   String? @db.VarChar(800)
  indica_plan     INDICADORPLAN[]
  plan_impa_ind   PLANIMPACTAINDICADOR[]
  actividades     ACTIVIDAD[]
  responsable     USUARIO @relation(fields: [user_id], references: [id_cuenta])
  objetivo        OBJETIVOESTRATEGICO @relation(fields: [obj_id], references: [obj_id], onDelete: Cascade)

  @@map("plandeaccion")
}

model USUARIO {
  id_cuenta   Int @id @default(autoincrement())
  correo      String @unique
  contrasena  String
  nombre      String
  cargo       String
  is_admin    Int
  planes      PLANDEACCION[]

  @@map("usuario")
}

model PLANIMPACTAINDICADOR {
  pii_id          Int @id @default(autoincrement())
  ind_obj_id      Int
  plan_id         Int
  plan            PLANDEACCION @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)
  objetivo        INDICADOROBJETIVO @relation(fields: [ind_obj_id], references: [ind_obj_id], onDelete: Cascade)

  @@map("planimpactaindicador")
}

model INDICADORPLAN {
  ind_plan_id     Int @id @default(autoincrement())
  plan_id         Int
  form_calculo    String
  meta_plazo      String
  desc_indicaplan String
  fecha_inicio    DateTime
  fecha_fin       DateTime
  plan            PLANDEACCION @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)

  @@map("indicadorplan")
}

model ACTIVIDAD {
  act_id        Int @id @default(autoincrement())
  plan_id       Int
  desc_act      String
  responsable   String
  plazo         String
  estado        String @db.VarChar(20)
  fecha_inicio  DateTime
  fecha_fin     DateTime
  avances       REPORTEAVANCE[]
  plan          PLANDEACCION @relation(fields: [plan_id], references: [plan_id], onDelete: Cascade)

  @@map("actividad")
}

model REPORTEAVANCE {
  avance_id   Int @id @default(autoincrement())
  act_id      Int
  nombre      String
  resumen     String
  descripcion String @db.VarChar(500)
  archivos    ARCHIVO[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  actividad   ACTIVIDAD @relation(fields: [act_id], references: [act_id], onDelete: Cascade)

  @@map("reporteavance")
}

model ARCHIVO {
  archivo_id      Int @id @default(autoincrement())
  avance_id       Int
  nombreOriginal  String
  nombre          String
  ruta            String //De momento se almacena la ruta absoluta del archivo
  createdAt       DateTime @default(now())
  avance          REPORTEAVANCE @relation(fields: [avance_id], references: [avance_id], onDelete: Cascade)

  @@map("archivo")
}